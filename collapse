import React, { useState } from 'react';
import Graph from 'react-graph-vis';

function App() {
  const [graph, setGraph] = useState({
    nodes: [
      { id: 1, label: 'Node 1', level: 1, collapsed: false },
      { id: 2, label: 'Node 2', level: 2, collapsed: true },
      { id: 3, label: 'Node 3', level: 2, collapsed: true },
      { id: 4, label: 'Node 4', level: 3, collapsed: true },
      { id: 5, label: 'Node 5', level: 3, collapsed: true },
    ],
    edges: [
      { from: 1, to: 2 },
      { from: 1, to: 3 },
      { from: 2, to: 4 },
      { from: 2, to: 5 },
    ],
  });

  const handleDoubleClick = (event) => {
    const nodeId = event.nodes[0];
    const newGraph = { ...graph };
    const node = newGraph.nodes.find((n) => n.id === nodeId);

    if (!node.collapsed) {
      // 如果节点未折叠，则折叠它
      newGraph.nodes = newGraph.nodes.map((n) =>
        n.level > node.level && n.id !== nodeId
          ? { ...n, collapsed: true }
          : n
      );
    } else {
      // 如果节点已折叠，则展开它
      newGraph.nodes = newGraph.nodes.map((n) =>
        n.id === nodeId ? { ...n, collapsed: false } : n
      );
    }

    setGraph(newGraph);
  };

  const options = {
    layout: {
      hierarchical: {
        direction: 'UD',
        sortMethod: 'directed',
      },
    },
    edges: {
      arrows: 'to',
    },
    interaction: {
      hover: true,
      doubleClick: {
        enabled: true,
        selectConnectedEdges: false,
        // 双击事件处理函数
        handler: handleDoubleClick,
      },
    },
  };

  return (
    <div>
      <Graph graph={graph} options={options} style={{ height: '500px' }} />
    </div>
  );
}

export default App;


